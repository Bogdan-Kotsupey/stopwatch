{"version":3,"sources":["components/Buttons/Buttons.js","components/Timer/Timer.js","components/Screen/Screen.js","App.js","index.js"],"names":["Buttons","props","className","onClick","handleStart","subscription","handleDoubleClick","handleReset","Timer","time","Math","floor","slice","Screen","useState","timer","setTimer","difference","setDifference","setSubscription","prevent","setPrevent","unsubscribe","timerSubscription","interval","pipe","map","v","subscribe","timerInstance","setTimeout","clearTimeout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAGe,SAASA,EAAQC,GAC9B,OACE,sBAAKC,UAAU,UAAf,UACE,qBACEA,UAAU,MACVC,QAASF,EAAMG,YAFjB,SAIGH,EAAMI,aAAe,OAAS,UAEjC,qBACEH,UAAU,WACVC,QAASF,EAAMK,kBAFjB,2BAMA,qBACEJ,UAAU,MACVC,QAASF,EAAMM,YAFjB,sB,MCfS,SAASC,EAAT,GAA0B,IAATC,EAAQ,EAARA,KAC9B,OACE,sBAAKP,UAAU,QAAf,UACE,uBAAMA,UAAU,SAAhB,WACI,IAAMQ,KAAKC,MAAMF,EAAO,OAAOG,OAAO,GAD1C,OAGA,uBAAMV,UAAU,SAAhB,WACI,IAAMQ,KAAKC,MAAOF,EAAO,GAAM,KAAKG,OAAO,GAD/C,OAGA,sBAAMV,UAAU,SAAhB,UACI,IAAMQ,KAAKC,MAAMF,EAAO,KAAKG,OAAO,Q,MC6D/BC,MA/Df,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOT,EAAP,KAAqBc,EAArB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KA8CA,OACE,sBAAKnB,UAAU,SAAf,UACE,cAAC,EAAD,CAAOO,KAAMM,IACb,cAAC,EAAD,CACEV,aAAcA,EACdD,YAjDiB,WACrB,GAAKC,EAQHA,EAAaiB,cACbN,EAAS,GACTE,EAAc,GACdC,EAAgB,QAXC,CACjB,IAAMI,EAAoBC,YAAS,KAChCC,KAAKC,aAAI,SAACC,GAAD,OAAOA,EAAI,MACpBC,WAAU,SAACD,GACVX,EAASW,EAAIV,MAEjBE,EAAgBI,KA2CdjB,kBAlCQ,WACZ,GAAIc,EAAS,CACXC,GAAW,GACX,IAAMQ,EAAgBC,YAAW,WAC/BT,GAAW,GACXU,aAAaF,KACZ,UAECxB,GACFA,EAAaiB,cAGfJ,EAAcH,GACdI,EAAgB,KAsBdZ,YAlBiB,WACjBF,GACFA,EAAaiB,cAGf,IAAMC,EAAoBC,YAAS,KAAMI,WAAU,SAACD,GAClDX,EAASW,MAEXR,EAAgBI,UC/CLS,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,OCDN+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1e9d0dec.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Buttons.css\";\n\nexport default function Buttons(props) {\n  return (\n    <div className=\"buttons\">\n      <div\n        className=\"btn\"\n        onClick={props.handleStart}\n      >\n        {props.subscription ? \"Stop\" : \"Start\"}\n      </div>\n      <div\n        className=\"btn wait\"\n        onClick={props.handleDoubleClick}\n      >\n        Pause(2click)\n      </div>\n      <div\n        className=\"btn\"\n        onClick={props.handleReset}\n      >\n        Reset\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Timer.css\";\n\nexport default function Timer({ time }) {\n  return (\n    <div className=\"timer\">\n      <span className=\"digits\">\n        {(\"0\" + Math.floor(time / 3600)).slice(-2)}:\n      </span>\n      <span className=\"digits\">\n        {(\"0\" + Math.floor((time / 60) % 60)).slice(-2)}:\n      </span>\n      <span className=\"digits\">\n        {(\"0\" + Math.floor(time % 60)).slice(-2)}\n      </span>\n    </div>\n  );\n}","import { useState } from \"react\";\n\nimport { interval } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nimport Buttons from \"../Buttons/Buttons\";\nimport Timer from \"../Timer/Timer\";\n\nimport './Screen.css';\n\n\nfunction Screen() {\n  const [timer, setTimer] = useState(0);\n  const [difference, setDifference] = useState(0);\n  const [subscription, setSubscription] = useState(\"\");\n  const [prevent, setPrevent] = useState(true);\n\n  const onStartHandler = () => {\n    if (!subscription) {\n      const timerSubscription = interval(1000)\n        .pipe(map((v) => v + 1))\n        .subscribe((v) => {\n          setTimer(v + difference);\n        });\n      setSubscription(timerSubscription);\n    } else {\n      subscription.unsubscribe();\n      setTimer(0);\n      setDifference(0);\n      setSubscription(\"\");\n    }\n  };\n\n  const pause = () => {\n    if (prevent) {\n      setPrevent(false);\n      const timerInstance = setTimeout(function () {\n        setPrevent(true);\n        clearTimeout(timerInstance);\n      }, 300);\n    } else {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n\n      setDifference(timer);\n      setSubscription(\"\");\n    }\n  };\n\n  const onResetHandler = () => {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n\n    const timerSubscription = interval(1000).subscribe((v) => {\n      setTimer(v);\n    });\n    setSubscription(timerSubscription);\n  };\n\n  return (\n    <div className=\"screen\">\n      <Timer time={timer} />\n      <Buttons\n        subscription={subscription}\n        handleStart={onStartHandler}\n        handleDoubleClick={pause}\n        handleReset={onResetHandler}\n      />\n    </div>\n  );\n}\n\nexport default Screen;\n","import './App.css';\nimport Screen from './components/Screen/Screen';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Screen />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}